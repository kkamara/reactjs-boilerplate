{"version":3,"sources":["component/Breadcrumb/index.js","views/MultiLanguage/index.js"],"names":["useStyles","makeStyles","theme","root","background","boxShadow","border","cardClass","padding","spacing","cardContent","paddingLeft","paddingTop","paddingBottom","divider","marginBottom","marginTop","spacer","breadcrumbTitle","fontWeight","Breadcrumbs","props","classes","title","color","outline","size","isCard","rest","className","variant","MultiLanguage","customization","useSelector","state","dispatch","useDispatch","React","useState","locale","language","setLanguage","useEffect","Fragment","id","component","Link","to","container","gridSpacing","item","mb","row","aria-label","name","value","onChange","event","target","type","actionTypes","control","label"],"mappings":"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","file":"static/js/12.afe926ed.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, Card, CardContent, Typography, Divider } from '@material-ui/core';\n\nimport MuiBreadcrumbs from '@material-ui/core/Breadcrumbs';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: 'transparent',\n        boxShadow: 'none',\n        border: 'none',\n    },\n    cardClass: {\n        padding: theme.spacing(3),\n    },\n    cardContent: {\n        paddingLeft: 0,\n        paddingTop: 0,\n        paddingBottom: '0 !important',\n    },\n    divider: {\n        marginBottom: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n    spacer: {\n        marginBottom: theme.spacing(3),\n    },\n    breadcrumbTitle: {\n        fontWeight: 500,\n        marginTop: theme.spacing(1),\n    },\n}));\n\nconst Breadcrumbs = (props) => {\n    const classes = useStyles();\n    const { color, outline, size, title, divider, isCard, ...rest } = props;\n    let cardClass = classes.root;\n    if (isCard) {\n        cardClass = classes.cardClass;\n    }\n\n    return (\n        <Card className={cardClass}>\n            <CardContent className={classes.cardContent}>\n                <MuiBreadcrumbs {...rest} />\n                {title && (\n                    <Typography className={classes.breadcrumbTitle} variant=\"h3\">\n                        {title}\n                    </Typography>\n                )}\n                {divider === false && !isCard && <div className={classes.spacer} />}\n                {divider !== false && <Divider className={classes.divider} />}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Breadcrumbs;\n","import React, { useEffect } from 'react';\nimport {\n    Box,\n    Card,\n    CardHeader,\n    CardContent,\n    Divider,\n    Grid,\n    Typography,\n    FormControl,\n    FormLabel,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport Breadcrumb from './../../component/Breadcrumb';\nimport { gridSpacing } from '../../store/constant';\nimport * as actionTypes from '../../store/actions';\n\nconst MultiLanguage = () => {\n    const customization = useSelector((state) => state.customization);\n    const dispatch = useDispatch();\n\n    const [language, setLanguage] = React.useState(customization.locale);\n\n    const handleChange = (event) => {\n        setLanguage(event.target.value);\n        dispatch({ type: actionTypes.THEME_LOCALE, locale: event.target.value });\n    };\n\n    useEffect(() => {\n        setLanguage(customization.locale);\n    }, [customization]);\n\n    return (\n        <React.Fragment>\n            <Breadcrumb title={<FormattedMessage id=\"title\" />}>\n                <Typography component={Link} to=\"/\" variant=\"subtitle2\" color=\"inherit\" className=\"link-breadcrumb\">\n                    <FormattedMessage id=\"home\" />\n                </Typography>\n                <Typography variant=\"subtitle2\" color=\"primary\" className=\"link-breadcrumb\">\n                    <FormattedMessage id=\"title\" />\n                </Typography>\n            </Breadcrumb>\n            <Grid container spacing={gridSpacing}>\n                <Grid item>\n                    <Card>\n                        <CardHeader\n                            title={\n                                <Typography component=\"div\" className=\"card-header\">\n                                    <FormattedMessage id=\"title\" />\n                                </Typography>\n                            }\n                        />\n                        <Divider />\n                        <CardContent>\n                            <Box mb={3}>\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel component=\"legend\">\n                                        <FormattedMessage id=\"change\" />\n                                    </FormLabel>\n                                    <RadioGroup row aria-label=\"position\" name=\"position\" value={language} onChange={handleChange}>\n                                        <FormControlLabel value=\"en\" control={<Radio color=\"primary\" />} label=\"English\" />\n                                        <FormControlLabel value=\"fr\" control={<Radio color=\"primary\" />} label=\"français\" />\n                                        <FormControlLabel value=\"ro\" control={<Radio color=\"primary\" />} label=\"Română\" />\n                                        <FormControlLabel value=\"zh\" control={<Radio color=\"primary\" />} label=\"中国人\" />\n                                    </RadioGroup>\n                                </FormControl>\n                            </Box>\n\n                            <Typography variant=\"body2\">\n                                <FormattedMessage id=\"message\" />\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default MultiLanguage;\n"],"sourceRoot":""}