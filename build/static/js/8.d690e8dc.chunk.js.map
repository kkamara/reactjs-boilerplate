{"version":3,"sources":["component/Breadcrumb/index.js","../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","views/Utils/Typography/index.js"],"names":["useStyles","makeStyles","theme","root","background","boxShadow","border","cardClass","padding","spacing","cardContent","paddingLeft","paddingTop","paddingBottom","divider","marginBottom","marginTop","spacer","breadcrumbTitle","fontWeight","Breadcrumbs","props","classes","title","color","outline","size","isCard","rest","className","variant","CardHeader","React","ref","action","avatar","_props$component","component","Component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutProperties","type","Typography","_extends","display","clsx","content","withStyles","alignItems","flex","marginRight","alignSelf","name","createSvgIcon","d","marginLeft","backgroundColor","palette","grey","borderRadius","cursor","shadows","emphasize","icon","width","height","ButtonBase","focusRipple","MoreHorizIcon","children","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","key","concat","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","margin","listStyle","userSelect","Fragment","Link","to","container","gridSpacing","item","direction","gutterBottom"],"mappings":"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","file":"static/js/8.d690e8dc.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, Card, CardContent, Typography, Divider } from '@material-ui/core';\n\nimport MuiBreadcrumbs from '@material-ui/core/Breadcrumbs';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: 'transparent',\n        boxShadow: 'none',\n        border: 'none',\n    },\n    cardClass: {\n        padding: theme.spacing(3),\n    },\n    cardContent: {\n        paddingLeft: 0,\n        paddingTop: 0,\n        paddingBottom: '0 !important',\n    },\n    divider: {\n        marginBottom: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n    spacer: {\n        marginBottom: theme.spacing(3),\n    },\n    breadcrumbTitle: {\n        fontWeight: 500,\n        marginTop: theme.spacing(1),\n    },\n}));\n\nconst Breadcrumbs = (props) => {\n    const classes = useStyles();\n    const { color, outline, size, title, divider, isCard, ...rest } = props;\n    let cardClass = classes.root;\n    if (isCard) {\n        cardClass = classes.cardClass;\n    }\n\n    return (\n        <Card className={cardClass}>\n            <CardContent className={classes.cardContent}>\n                <MuiBreadcrumbs {...rest} />\n                {title && (\n                    <Typography className={classes.breadcrumbTitle} variant=\"h3\">\n                        {title}\n                    </Typography>\n                )}\n                {divider === false && !isCard && <div className={classes.spacer} />}\n                {divider !== false && <Divider className={classes.divider} />}\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Breadcrumbs;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import React from 'react';\nimport { Card, CardHeader, CardContent, Divider, Grid } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport MuiTypography from '@material-ui/core/Typography';\n\nimport Breadcrumb from './../../../component/Breadcrumb';\nimport { gridSpacing } from '../../../store/constant';\n\nconst Typography = (props) => {\n    return (\n        <React.Fragment>\n            <Breadcrumb title=\"Typography\">\n                <MuiTypography component={Link} to=\"/\" variant=\"subtitle2\" color=\"inherit\" className=\"link-breadcrumb\">\n                    Home\n                </MuiTypography>\n                <MuiTypography variant=\"subtitle2\" color=\"primary\" className=\"link-breadcrumb\">\n                    Typography\n                </MuiTypography>\n            </Breadcrumb>\n            <Grid container spacing={gridSpacing}>\n                <Grid item>\n                    <Card>\n                        <CardHeader\n                            title={\n                                <MuiTypography component=\"span\" className=\"card-header\">\n                                    Basic Typography\n                                </MuiTypography>\n                            }\n                        />\n                        <Divider />\n                        <CardContent>\n                            <Grid container direction=\"column\" spacing={1}>\n                                <Grid item>\n                                    <MuiTypography variant=\"h1\" gutterBottom>\n                                        h1. Heading\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"h2\" gutterBottom>\n                                        h2. Heading\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"h3\" gutterBottom>\n                                        h3. Heading\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"h4\" gutterBottom>\n                                        h4. Heading\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"h5\" gutterBottom>\n                                        h5. Heading\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"h6\" gutterBottom>\n                                        h6. Heading\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"subtitle1\" gutterBottom>\n                                        subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"subtitle2\" gutterBottom>\n                                        subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"body1\" gutterBottom>\n                                        body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde\n                                        suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos\n                                        laborum fugiat deleniti? Eum quasi quidem quibusdam.\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"body2\" gutterBottom>\n                                        body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde\n                                        suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos\n                                        laborum fugiat deleniti? Eum quasi quidem quibusdam.\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"button\" display=\"block\" gutterBottom>\n                                        button text\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"caption\" display=\"block\" gutterBottom>\n                                        caption text\n                                    </MuiTypography>\n                                </Grid>\n                                <Grid item>\n                                    <MuiTypography variant=\"overline\" display=\"block\" gutterBottom>\n                                        overline text\n                                    </MuiTypography>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default Typography;\n"],"sourceRoot":""}